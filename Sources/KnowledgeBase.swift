import Foundation

enum KnowledgeBase {
    static let combinedBase64 = "T3R0b21hbiBvcnRob2dyYXBoeSBndWlkYW5jZSAoc2hvcnQpOgotIENvbnZlcnQgVHVya2lzaCBMYXRpbiB0ZXh0IHRvIE90dG9tYW4gQXJhYmljIHNjcmlwdCB3aXRob3V0IHRyYW5zbGF0aW9uLgotIFByZXNlcnZlIHB1bmN0dWF0aW9uIGFuZCBudW1iZXJzLgotIFVzZSBjb21tb24gZm9ybXMgKGUuZy4sINmDIGZvciBrLCDaryBmb3IgZyBiZWZvcmUgZnJvbnQgdm93ZWxzLCDZgiBvdGhlcndpc2U7INmIIGZvciB1L287INmKIGZvciBpL2U7INmJIGZvciBmaW5hbCBpKS4KLSBJZiB3b3JkIGVuZHMgd2l0aCAtbmcsIHByZWZlciBmaW5hbCBORyAo76+TKSB3aGVuIGFwcHJvcHJpYXRlLgoKSGFyaWthIGJpciBmaWtpciEgWWFwYXkgemVrYW7EsW4gT3NtYW5sxLEgaGFyZmxlcml5bGUgbWV0aW4gw7xyZXRlYmlsbWVzaSBpw6dpbiBvbmEgdmVyaWxlY2VrIG9sYW4gYnUgZMO2a8O8bWFuxLFuLCBrdXJhbGxhcsSxIG5ldCB2ZSBhbmxhxZ/EsWzEsXIgYmlyIMWfZWtpbGRlIMO2emV0bGVtZXNpIGdlcmVraXIuIEHFn2HEn8SxZGEsIGJ1IGFtYcOnIGnDp2luIGTDtmvDvG1hbsSxbiBlbiBpxZ9lIHlhcmF5YWNhayDFn2VraWxkZSBrxLFzYWx0xLFsbcSxxZ8gaGFsaW5pIGJ1bGFiaWxpcnNpbml6LiBCdSBwcm9tcHQsIHlhcGF5IHpla2F5YSBuZSB5YXBtYXPEsSBnZXJla3RpxJ9pbmksIGhhbmdpIGt1cmFsbGFyYSB1eW1hc8SxIGdlcmVrdGnEn2luaSB2ZSBuZWxlcmUgZGlra2F0IGV0bWVzaSBnZXJla3RpxJ9pbmkgZG/En3J1ZGFuIGFubGF0xLFyLgoKLS0tCgojIyMgKipZYXBheSBaZWthIMSww6dpbiBPcHRpbWl6ZSBFZGlsbWnFnyBQcm9tcHQ6IE9zbWFubMSxIEhhcmZsZXJpeWxlIE1ldGluIFlhem1hIEt1cmFsbGFyxLEqKgoKKipHZW5lbCBBbWHDpzoqKiBCdSBiZWxnZWRla2kga3VyYWxsYXLEsSBrdWxsYW5hcmFrLCBtb2Rlcm4gVMO8cmvDp2UgbWV0aW5sZXJpIE9zbWFubMSxIGFsZmFiZXNpeWxlIGRvxJ9ydSBiaXIgxZ9la2lsZGUgeWF6bWFsxLFzxLFuLiBIZWRlZiBraXRsZSwgQXJhcMOnYSBhbGZhYmVzaW5lIGHFn2luYSBvbGFuIGlsYWhpeWF0IMO2xJ9yZW5jaWxlcmlkaXIuCgoqKlRlbWVsIFByZW5zaXBsZXI6KioKMS4gICoqQXJhcMOnYSB2ZSBGYXJzw6dhIEvDtmtlbmxpIEtlbGltZWxlcjoqKiBCdSBrZWxpbWVsZXIsIE9zbWFubMSxIFTDvHJrw6dlc2luZGUga2VuZGkgb3JpamluYWwgaW1sw6JsYXLEsXlsYSB5YXrEsWzEsXIuIEHFn2HEn8SxZGFraSBpbWzDoiBrdXJhbGxhcsSxLCB5YWxuxLF6Y2EgVMO8cmvDp2Uga8O2a2VubGkga2VsaW1lbGVyIHZlIFTDvHJrw6dlIGVrbGVyZSB1eWd1bGFuxLFyLgoyLiAgKipLYWzEsW5sxLFrIHZlIMSwbmNlbGlrIFV5dW11OioqIEhhcmYgc2XDp2ltaSwga2VsaW1lZGVraSDDvG5sw7xsZXJpbiBrYWzEsW4gKGEsIMSxLCBvLCB1KSB2ZXlhIGluY2UgKGUsIGksIMO2LCDDvCkgb2xtYXPEsW5hIGJhxJ9sxLFkxLFyLgogICAgKiAqKkthbMSxbiDDnG5sw7xsZXJsZToqKiDZgiAoayksINi6ICjEnyksINi1IChzKSwg2LcgKHQvZCkga3VsbGFuxLFsxLFyLgogICAgKiAqKsSwbmNlIMOcbmzDvGxlcmxlOioqINmDIChrKSwg2q8gKGcvxJ8pLCDYsyAocyksINiqICh0KSwg2K8gKGQpIGt1bGxhbsSxbMSxci4KCioqMS4gVMO8cmvDp2UgS2VsaW1lbGVyZGUgw5xubMO8bGVyaW4gKFNlc2xpIEhhcmZsZXJpbikgWWF6xLFtxLEgKMSwbWzDoikqKgoKw5xubMO8bGVyICoqRWxpZiAo2KcpKiosICoqSGUgKNmHKSoqLCAqKlZhdiAo2YgpKiosICoqWWUgKNmJKSoqIGhhcmZsZXJpIGt1bGxhbsSxbGFyYWsgZ8O2c3RlcmlsaXIuCgp8IMOcbmzDvCB8IEtlbGltZSBCYcWfxLFuZGEgfCBLZWxpbWUgT3J0YXPEsW5kYSB8IEtlbGltZSBTb251bmRhIHwKfCA6LS0tIHwgOi0tLSB8IDotLS0gfCA6LS0tIHwKfCAqKmEqKiB8ICoq2KIqKiAoTWVkbGkgRWxpZikgfCAqKtinKiogKEVsaWYpIHwgKirYpyoqIChFbGlmKSB2ZXlhICoq2YcqKiAoSGUpIHwKfCB8IGDYotiqYCAoYXQpLCBg2KLZhtinYCAoYW5hKSB8IGDYqNin2KjYp2AgKGJhYmEpLCBg2YLYp9m+24xgIChrYXDEsSkgfCBg2KjYp9io2KdgIChiYWJhKSwgYNii2LHYp9io2YdgIChhcmFiYSkgfAp8ICoqZSoqIHwgKirYpyoqIChFbGlmKSB8IEdlbmVsbGlrbGUgaGFyZmxlIGfDtnN0ZXJpbG1lei4gfCAqKtmHKiogKEhlKSB8CnwgfCBg2KfZhGAgKGVsKSwgYNin2YjYsWAgKGV2KSB8IGDar9mE2K/bjGAgKGdlbGRpKSwgYNiz2YjYr9uMYCAoc2V2ZGkpIHwgYNiv2K/Zh2AgKGRlZGUpLCBg2KrZvtmHYCAodGVwZSkgfAp8ICoqxLEgLyBpKiogfCAqKtin24zZgCoqIChFbGlmICsgWWUpIHwgKirbjCoqIChZZSkgfCAqKtuMKiogKFllKSB8CnwgfCBg2KfbjNi0YCAoacWfKSwgYNin24zZvmAgKGlwKSB8IGDZgtuM2LHYr9uMYCAoa8SxcmTEsSksIGDYs9uM2YTYr9uMYCAoc2lsZGkpIHwgYNmC2KfZvtuMYCAoa2FwxLEpLCBg2K/ZhNuMYCAoZGVsaSkgfAp8ICoqbyAvIMO2IC8gdSAvIMO8Kip8ICoq2KfZiCoqIChFbGlmICsgVmF2KSB8ICoq2YgqKiAoVmF2KSB8ICoq2YgqKiAoVmF2KSB8CnwgfCBg2KfZiNmCYCAob2spLCBg2KfZiNqGYCAow7zDpykgfCBg2YLZiNmEYCAoa29sKSwgYNqv2YjZhGAgKGfDtmwpLCBg2YLZiNix2YhgIChrdXJ1KSB8IGDYtdmIYCAoc3UpLCBg2KfZiNiq2YhgICjDvHTDvCkgfAoKKioyLiBUw7xya8OnZSBFa2xlcmluIFlhesSxbcSxKioKCkVrbGVyLCBnZW5lbGxpa2xlIGtlbGltZW5pbiBzZXMgeWFwxLFzxLFuYSBiYWvEsWxtYWtzxLF6xLFuIGthbMSxcGxhxZ9txLHFnyAoa2xpxZ9lKSDFn2VraWxkZSB5YXrEsWzEsXIuCiogKirDh2/En3VsIEVraSAoYC1sYXIgLyAtbGVyYCk6KiogKirZhNixKiogYNii2KrZhNixYCAoYXRsYXIpLCBg2KfZhNmE2LFgIChlbGxlcikKKiAqKkhhbCBFa2xlcmk6KioKICAgICogYC1pIC8gLcSxIC8gLXUgLyAtw7xgOiAqKtuMKiogYNin2Y7ZiNuMYCAoZXZpKSwgYNmC2KfZvtmI24zbjGAgKGthcMSxecSxKQogICAgKiBgLWUgLyAtYWA6ICoq2YcqKiBg2KfZjtmI2YdgIChldmUpLCBg2YLYp9m+2YjbjNmHYCAoa2FwxLF5YSkKICAgICogYC1kZSAvIC1kYSAvIC10ZSAvIC10YWA6ICoq2K/ZhyoqIGDYp9mI2K/Zh2AgKGV2ZGUpLCBg2KLYqtiv2YdgIChhdHRhKQogICAgKiBgLWRlbiAvIC1kYW4gLyAtdGVuIC8gLXRhbmA6ICoq2K/ZhioqIGDYp9mI2K/ZhmAgKGV2ZGVuKSwgYNii2KrYr9mGYCAoYXR0YW4pCiogKipBaXRsaWsgKMSweWVsaWspIEVrbGVyaToqKgogICAgKiAxLiBUZWtpbCAoYC3EsW0gLyAtaW1gKTogKirZhSoqIGDZgtmE2YXZhWAgKGthbGVtaW0pCiAgICAqIDIuIFRla2lsIChgLcSxbiAvIC1pbmApOiAqKtqtKiogKEvDomYtxLEgTsO7bsOuKSBg2YLZhNmF2q1gIChrYWxlbWluKQogICAgKiAzLiBUZWtpbCAoYC3EsSAvIC1pIC8gLXPEsSAvIC1zaWApOiAqKtuMIC8g2LPbjCoqIGDZgtmE2YXbjGAgKGthbGVtaSksIGDZgtin2b7ZiNiz24xgIChrYXDEsXPEsSkKICAgICogMS4gw4dvxJ91bCAoYC3EsW3EsXogLyAtaW1pemApOiAqKtmF2LIqKiBg2YLZhNmF2YXYsmAgKGthbGVtaW1peikKICAgICogMi4gw4dvxJ91bCAoYC3EsW7EsXogLyAtaW5pemApOiAqKtqt2LIqKiBg2YLZhNmF2q3YsmAgKGthbGVtaW5peikKICAgICogMy4gw4dvxJ91bCAoYC1sYXLEsSAvIC1sZXJpYCk6ICoq2YTYsduMKiogYNmC2YTZhdmE2LHbjGAgKGthbGVtbGVyaSkKKiAqKlNvcnUgRWtpIChgLW3EsSAvIC1taSAvIC1tdSAvIC1tw7xgKToqKiBLZWxpbWV5ZSBiaXRpxZ9payAqKtmF24wqKiB5YXrEsWzEsXIuIGDar9mE2K/bjCDZhduMYCAoZ2VsZGkgbWk/KQoqICoqRmlpbCBaYW1hbiBFa2xlcmk6KioKICAgICogYC1kxLEgLyAtZGlgOiAqKtiv24wqKiBg2KLZhNiv24xgIChhbGTEsSksIGDar9mE2K/bjGAgKGdlbGRpKQogICAgKiBgLW3EscWfIC8gLW1pxZ9gOiAqKtmF2LQqKiBg2KLZhNmF2LRgIChhbG3EscWfKSwgYNqv2YTZhdi0YCAoZ2VsbWnFnykKICAgICogYC1hY2FrIC8gLWVjZWtgOiAqKtmHINis2YIgLyDZhyDYrNmDKiogYNii2YTZhyDYrNmCYCAoYWxhY2FrKSwgYNqv2YTZhyDYrNmDYCAoZ2VsZWNlaykKICAgICogYC3EsXlvcmA6ICoq24zZiNixKiogYNqv2YTbjNmI2LFgIChnZWxpeW9yKQoqICoqTWFzdGFybGFyIChgLW1hayAvIC1tZWtgKToqKiAqKtmF2YIgLyDZhdmDKiogYNii2YTZhdmCYCAoYWxtYWspLCBg2q/ZhNmF2YNgIChnZWxtZWspCiogKipTxLFmYXQgWWFwYW4gRWtsZXI6KioKICAgICogYC1sxLEgLyAtbGkgLyAtbHUgLyAtbMO8YDogKirZhNuMKiogYNi32YjYstmE24xgICh0dXpsdSksIGDYtNmD2LHZhNuMYCAoxZ9la2VybGkpCiAgICAqIGAtc8SxeiAvIC1zaXogLyAtc3V6IC8gLXPDvHpgOiAqKtiz2LIqKiBg2LfZiNiy2LPYsmAgKHR1enN1eiksIGDYtNmD2LHYs9iyYCAoxZ9la2Vyc2l6KQogICAgKiBgLWzEsWsgLyAtbGlrIC8gLWx1ayAvIC1sw7xrYDogKirZhNmCIC8g2YTZgyoqIGDYt9mI2LLZhNmCYCAodHV6bHVrKSwgYNi02YPYsdmE2YNgICjFn2VrZXJsaWspCgoqKjMuIMOWemVsIEhhcmZsZXIgdmUgRHVydW1sYXIqKgoKKiAqKlTDvHJrw6dleWUgw5Z6Z8O8IEhhcmZsZXI6KiogRmFyc8OnYWRhbiBhbMSxbmFuICoq2b4sINqGLCDamCwg2q8qKiBoYXJmbGVyaSBrdWxsYW7EsWzEsXIuCiogKipLw6JmIEhhcmZpbmluIMOHZcWfaXRsZXJpOioqCiAgICAqICoqayAoaW5jZSksIGcgKGluY2UpLCDEnyAoaW5jZSksIHk6KiogKirZgyoqIGDZg9iv24xgIChrZWRpKSwgYNqv2YTYr9uMYCAoZ2VsZGkpLCBg2K/ar9mEYCAoZGXEn2lsKQogICAgKiAqKmsgKGthbMSxbik6KiogKirZgioqIGDZgtin2b7ZiGAgKGthcMSxKQogICAgKiAqKsSfIChrYWzEsW4pLCBnIChrYWzEsW4pOioqICoq2LoqKiBg2LfYp9i6YCAoZGHEnyksIGDYutinYWZpbGAgKGfDomZpbCkKICAgICogKipuIChnZW5pemRlbiwgbmF6YWwpOioqICoq2q0qKiAoS8OiZi3EsSBOw7tuw64pIGDYr9qt24zYsmAgKGRlbml6KSwgYNiz2q3Yp2AgKHNhbmEpCiogKipLYWzEsXBsYcWfbcSxxZ8gWWF6xLFtbGFyOioqIEJhesSxIGtlbGltZWxlciBrdXJhbGxhcmEgdXltYWRhbiwga2FsxLFwbGHFn23EscWfIMWfZWtpbGRlIHlhesSxbMSxcjoKICAgICogYNqv2KjbjGAgKGdpYmkpCiAgICAqIGDYp9uM2obZiNmGYCAoacOnaW4pCiAgICAqIGDYqNixYCAoYmlyKQogICAgKiBg2obZiNmCYCAow6dvaykKICAgICogYNmIYCAodmUpCgw="
    static var combined: String {
        guard let data = Data(base64Encoded: combinedBase64) else { return "" }
        return String(data: data, encoding: .utf8) ?? ""
    }
}
